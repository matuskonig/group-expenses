@using Frontend.Services
@using Entities.Dto.AuthDto
@implements IDisposable
@inject UserApiService _userApiService

<CascadingValue Value="@this">
    @ChildContent
</CascadingValue>

@code {

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    // Provides current user, so individual components consuming the data does not need to connect to the service
    // directly and will be updated according to this cascading value
    public UserDto CurrentUser => _userApiService.CurrentUser;

    // Subscription to changes in data provided by service
    protected override void OnInitialized()
    {
        _userApiService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        _userApiService.OnChange -= StateHasChanged;
    }
}