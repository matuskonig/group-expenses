@page "/TodoServiceForm"
@using Frontend.Services
@using Frontend.Components
@implements IDisposable
@inject ITodoService todoService;

@foreach (var todo in todoService.Todos)
{
    <TodoItem todo="@todo" OnValidSubmit="@RemoveTodo(todo)" SubmitText="Delete"/>
}
<TodoItem todo="formData" OnValidSubmit="@SubmitForm" SubmitText="Add"/>


@code
{
    private Todo formData = new();

    protected override void OnInitialized()
    {
        todoService.OnChangeHandlers += StateHasChanged;
    }

    private Action RemoveTodo(Todo value)
    {
        return () =>
        {
            foreach (var it in todoService.Todos)
            {
                Console.WriteLine(it);
            }
            Console.WriteLine(value);
            todoService.Todos.Remove(value);
            todoService.NotifyChange();
        };
    }

    private void SubmitForm()
    {
        todoService.Todos.Add(formData);
        todoService.Todos.ForEach(Console.WriteLine);
        formData = new();
    }

    public void Dispose()
    {
        todoService.OnChangeHandlers -= StateHasChanged;
    }
}