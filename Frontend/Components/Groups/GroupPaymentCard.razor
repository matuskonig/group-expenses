@using Entities.GroupDto
@using Frontend.Services
@using Frontend.Components.UI
@using Frontend.Constants
@inject GroupService _groupService

<div class="card m-2">
    <div class="card-body">
        <h5 class="card-title">@PaymentGroup.Name</h5>
        <div class="card-text">Payment by: @PaymentGroup.PaymentBy.UserName</div>
        <div class="card-text">Payment targets:</div>
        <ul class="list-group max-content-container mb-2">
            @foreach (var singlePayment in PaymentGroup.PaymentTargets)
            {
                <li class="list-group-item">@singlePayment.Price - @singlePayment.Target.UserName</li>
            }
        </ul>
        <div class="flex-align-end">
            <span class="mr-2">
                <EditPaymentGroupDialog Group="@Group" PaymentGroup="@PaymentGroup"/>
            </span>
            <DangerIconButton @onclick="@RemovePaymentGroup" Icon="@IconName.Trash"></DangerIconButton>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public SinglePurposeUserGroupDto Group { get; set; }

    [Parameter]
    public UnidirectionalPaymentGroupDto PaymentGroup { get; set; }

    private async Task RemovePaymentGroup()
    {
        await _groupService.ModifyUserGroup(new SinglePurposeUserGroupDto
        {
            Id = Group.Id,
            GroupPayments = Group.GroupPayments.Except(new[] { PaymentGroup })
        });
        await _groupService.LoadAll();
    }

}