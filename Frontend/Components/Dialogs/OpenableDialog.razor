@Opener(this)

@if (_isOpened)
{
    <div class="modal show dialog-wrapper" role="dialog" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="modal-title">@Title</h3>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="@CloseDialog">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @ChildContent(this)
                </div>
            </div>
        </div>
    </div>
}


@code {
    private bool _isOpened = false;

    // Component used as a opener (button, etc.). Dialog context is provided to the component, allowing it to change the
    // inner state
    [Parameter]
    public RenderFragment<OpenableDialog> Opener { get; set; }

    // Title shown in the top of the dialog
    [Parameter]
    public RenderFragment Title { get; set; }

    // Dialog content, which has access to dialog state
    [Parameter]
    public RenderFragment<OpenableDialog> ChildContent { get; set; }

    public void OpenDialog() => _isOpened = true;

    public void CloseDialog() => _isOpened = false;

}